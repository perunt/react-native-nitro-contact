///
/// JPhoneNumber.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PhoneNumber.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::margeloContact {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PhoneNumber" and the the Kotlin data class "PhoneNumber".
   */
  struct JPhoneNumber final: public jni::JavaClass<JPhoneNumber> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/margeloContact/PhoneNumber;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PhoneNumber by copying all values to C++.
     */
    [[maybe_unused]]
    PhoneNumber toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldLabel = clazz->getField<jni::JString>("label");
      jni::local_ref<jni::JString> label = this->getFieldValue(fieldLabel);
      static const auto fieldValue = clazz->getField<jni::JString>("value");
      jni::local_ref<jni::JString> value = this->getFieldValue(fieldValue);
      return PhoneNumber(
        label != nullptr ? std::make_optional(label->toStdString()) : std::nullopt,
        value->toStdString()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPhoneNumber::javaobject> fromCpp(const PhoneNumber& value) {
      return newInstance(
        value.label.has_value() ? jni::make_jstring(value.label.value()) : nullptr,
        jni::make_jstring(value.value)
      );
    }
  };

} // namespace margelo::nitro::margeloContact
